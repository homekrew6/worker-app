Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/worker-app/js/components/accounts/login.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _authActions = require('./elements/authActions');

var _reactNavigation = require('react-navigation');

var _reactNative = require('react-native');

var _nativeBase = require('native-base');

var _reactNativeLoadingSpinnerOverlay = require('react-native-loading-spinner-overlay');

var _reactNativeLoadingSpinnerOverlay2 = babelHelpers.interopRequireDefault(_reactNativeLoadingSpinnerOverlay);

var _api = require('../../api');

var _api2 = babelHelpers.interopRequireDefault(_api);

var _i18n = require('../../i18n/i18n');

var _i18n2 = babelHelpers.interopRequireDefault(_i18n);

var _styles = require('./styles');

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var _MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons');

var _MaterialCommunityIcons2 = babelHelpers.interopRequireDefault(_MaterialCommunityIcons);

var deviceHeight = _reactNative.Dimensions.get('window').height;
var deviceWidth = _reactNative.Dimensions.get('window').width;
var launchscreenBg = require("../../../img/bg-login.png");
var launchscreenLogo = require("../../../img/logo.png");
var buttonImage = require("../../../img/bg-button.png");
var resetAction = _reactNavigation.NavigationActions.reset({
	index: 0,
	actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Menu' })]
});

var Login = function (_Component) {
	babelHelpers.inherits(Login, _Component);

	function Login(props) {
		babelHelpers.classCallCheck(this, Login);

		var _this = babelHelpers.possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

		_this.state = {
			email: '',
			password: ''
		};
		return _this;
	}

	babelHelpers.createClass(Login, [{
		key: 'pressForgotPassword',
		value: function pressForgotPassword() {
			this.props.navigation.navigate("ForgotPassword");
		}
	}, {
		key: 'pressLogin',
		value: function pressLogin() {
			var _this2 = this;

			if (!this.state.email) {
				_reactNative.Alert.alert('Please enter email');
				return false;
			}
			if (!this.state.password) {
				_reactNative.Alert.alert('Please enter password');
				return false;
			}
			var email = this.state.email;
			var password = this.state.password;
			_api2.default.post('Workers/approveChecking', { email: this.state.email }).then(function (resEdit) {
				if (resEdit.response.is_active) {

					_this2.props.login(email, password).then(function (res) {
						console.log(res);
						if (res.type == 'success') {
							_this2.props.getUserDetail(res.userId).then(function (userRes) {
								console.log(userRes);
								_this2.props.navigation.dispatch(resetAction);
							}).catch(function (err) {
								_reactNative.Alert.alert('Login failed, please try again');
							});
						} else {
							_reactNative.Alert.alert('Login failed, please try again');
						}
					}).catch(function (err) {
						console.log(err);
						_reactNative.Alert.alert('Login failed,please try again');
					});
				} else {
					_reactNative.Alert.alert('Your account is not activated yet, Please contact admin.');
				}
			}).catch(function (err) {
				_reactNative.Alert.alert('Please enter a valied email ID');
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			return _react2.default.createElement(
				_nativeBase.Container,
				{
					__source: {
						fileName: _jsxFileName,
						lineNumber: 77
					}
				},
				_react2.default.createElement(_reactNative.StatusBar, {
					backgroundColor: '#81cdc7',
					__source: {
						fileName: _jsxFileName,
						lineNumber: 78
					}
				}),
				_react2.default.createElement(
					_reactNative.Image,
					{ source: launchscreenBg, style: _styles2.default.imageContainer, __source: {
							fileName: _jsxFileName,
							lineNumber: 81
						}
					},
					_react2.default.createElement(
						_nativeBase.Content,
						{
							__source: {
								fileName: _jsxFileName,
								lineNumber: 82
							}
						},
						_react2.default.createElement(_reactNativeLoadingSpinnerOverlay2.default, { visible: this.props.auth.busy, textContent: "Loading...", textStyle: { color: '#FFF' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 83
							}
						}),
						_react2.default.createElement(
							_reactNative.View,
							{ style: _styles2.default.logoContainer, __source: {
									fileName: _jsxFileName,
									lineNumber: 84
								}
							},
							_react2.default.createElement(_reactNative.Image, { source: launchscreenLogo, style: _styles2.default.logo, __source: {
									fileName: _jsxFileName,
									lineNumber: 85
								}
							})
						),
						_react2.default.createElement(
							_reactNative.View,
							{ style: { padding: 20 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 88
								}
							},
							_react2.default.createElement(
								_nativeBase.Item,
								{ regular: true, style: { borderColor: '#29416f', borderWidth: 1, borderRadius: 2, height: 45 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 89
									}
								},
								_react2.default.createElement(_nativeBase.Input, { onChangeText: function onChangeText(text) {
										return _this3.setState({ email: text });
									}, placeholder: _i18n2.default.t('email'), keyboardType: 'email-address', value: this.state.email, style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 90
									}
								})
							),
							_react2.default.createElement(
								_nativeBase.Item,
								{ regular: true, style: { borderColor: '#29416f', marginTop: 10, borderWidth: 1, borderRadius: 2, height: 45 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 92
									}
								},
								_react2.default.createElement(_nativeBase.Input, { placeholder: _i18n2.default.t('password'), secureTextEntry: true, style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, onChangeText: function onChangeText(text) {
										return _this3.setState({ password: text });
									}, value: this.state.password, __source: {
										fileName: _jsxFileName,
										lineNumber: 93
									}
								})
							)
						),
						_react2.default.createElement(
							_reactNative.TouchableOpacity,
							{ transparent: true, style: { flex: 1, flexDirection: 'row', marginTop: 15, paddingLeft: 15, paddingRight: 15 }, onPress: function onPress() {
									return _this3.pressLogin();
								}, __source: {
									fileName: _jsxFileName,
									lineNumber: 97
								}
							},
							_react2.default.createElement(
								_reactNative.Image,
								{ source: buttonImage, style: { flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: 55 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 98
									}
								},
								_react2.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#fff', fontSize: 20, marginTop: -10, height: 30 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 99
										}
									},
									_i18n2.default.t('login')
								)
							)
						),
						_react2.default.createElement(
							_reactNative.TouchableOpacity,
							{ onPress: function onPress() {
									return _this3.pressForgotPassword();
								}, __source: {
									fileName: _jsxFileName,
									lineNumber: 102
								}
							},
							_react2.default.createElement(
								_reactNative.View,
								{
									__source: {
										fileName: _jsxFileName,
										lineNumber: 103
									}
								},
								_react2.default.createElement(
									_nativeBase.Text,
									{ style: { textAlign: 'right', color: '#1e3768', fontSize: 12, paddingBottom: 20, textDecorationStyle: 'solid', paddingLeft: 15, paddingRight: 15, textDecorationLine: 'underline', textDecorationColor: '#1e3768' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 104
										}
									},
									'Forgot password?'
								)
							)
						),
						_react2.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 10, marginBottom: 20 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 108
								}
							},
							_react2.default.createElement(
								_nativeBase.Text,
								{ style: { color: '#252525' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 109
									}
								},
								_i18n2.default.t('not_a_register_member'),
								' '
							),
							_react2.default.createElement(
								_reactNative.TouchableOpacity,
								{ onPress: function onPress() {
										return _this3.props.navigation.navigate("Signup");
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 110
									}
								},
								_react2.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#29416f' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 111
										}
									},
									_i18n2.default.t('signup')
								)
							)
						)
					)
				)
			);
		}
	}]);
	return Login;
}(_react.Component);

Login.propTypes = {
	auth: _propTypes2.default.object.isRequired
};
var mapStateToProps = function mapStateToProps(state) {
	return {
		auth: state.auth
	};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		login: function login(email, password) {
			return dispatch((0, _authActions.login)(email, password));
		},
		getUserDetail: function getUserDetail(id) {
			return dispatch((0, _authActions.getUserDetail)(id));
		}
	};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);