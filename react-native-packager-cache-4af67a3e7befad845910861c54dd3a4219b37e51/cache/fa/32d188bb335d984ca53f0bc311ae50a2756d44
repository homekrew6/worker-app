Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/worker-app/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _interface = require('../../interface');

var _xdate = require('xdate');

var _xdate2 = babelHelpers.interopRequireDefault(_xdate);

var _dateutils = require('../../dateutils');

var _dateutils2 = babelHelpers.interopRequireDefault(_dateutils);

var _style = require('./style');

var _style2 = babelHelpers.interopRequireDefault(_style);

var ReservationListItem = function (_Component) {
  babelHelpers.inherits(ReservationListItem, _Component);

  function ReservationListItem(props) {
    babelHelpers.classCallCheck(this, ReservationListItem);

    var _this = babelHelpers.possibleConstructorReturn(this, (ReservationListItem.__proto__ || Object.getPrototypeOf(ReservationListItem)).call(this, props));

    _this.styles = (0, _style2.default)(props.theme);
    return _this;
  }

  babelHelpers.createClass(ReservationListItem, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var r1 = this.props.item;
      var r2 = nextProps.item;
      var changed = true;
      if (!r1 && !r2) {
        changed = false;
      } else if (r1 && r2) {
        if (r1.day.getTime() !== r2.day.getTime()) {
          changed = true;
        } else if (!r1.reservation && !r2.reservation) {
          changed = false;
        } else if (r1.reservation && r2.reservation) {
          if (!r1.date && !r2.date || r1.date && r2.date) {
            changed = this.props.rowHasChanged(r1.reservation, r2.reservation);
          }
        }
      }
      return changed;
    }
  }, {
    key: 'renderDate',
    value: function renderDate(date, item) {
      if (this.props.renderDay) {
        return this.props.renderDay(date ? (0, _interface.xdateToData)(date) : undefined, item);
      }
      var today = _dateutils2.default.sameDate(date, (0, _xdate2.default)()) ? this.styles.today : undefined;
      if (date) {
        return _react2.default.createElement(
          _reactNative.View,
          { style: this.styles.day, __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { allowFontScaling: false, style: [this.styles.dayNum, today], __source: {
                fileName: _jsxFileName,
                lineNumber: 42
              }
            },
            date.getDate()
          ),
          _react2.default.createElement(
            _reactNative.Text,
            { allowFontScaling: false, style: [this.styles.dayText, today], __source: {
                fileName: _jsxFileName,
                lineNumber: 43
              }
            },
            _xdate2.default.locales[_xdate2.default.defaultLocale].dayNamesShort[date.getDay()]
          )
        );
      } else {
        return _react2.default.createElement(_reactNative.View, { style: this.styles.day, __source: {
            fileName: _jsxFileName,
            lineNumber: 48
          }
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props$item = this.props.item,
          reservation = _props$item.reservation,
          date = _props$item.date;

      var content = void 0;
      if (reservation) {
        var firstItem = date ? true : false;
        content = this.props.renderItem(reservation, firstItem);
      } else {
        content = this.props.renderEmptyDate(date);
      }
      return _react2.default.createElement(
        _reactNative.View,
        { style: this.styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 63
          }
        },
        this.renderDate(date, reservation),
        _react2.default.createElement(
          _reactNative.View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          },
          content
        )
      );
    }
  }]);
  return ReservationListItem;
}(_react.Component);

exports.default = ReservationListItem;