Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/worker-app/node_modules/react-navigation/src/navigators/DrawerNavigator.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeSafeAreaView = require('react-native-safe-area-view');

var _reactNativeSafeAreaView2 = babelHelpers.interopRequireDefault(_reactNativeSafeAreaView);

var _createNavigator = require('./createNavigator');

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require('../createNavigationContainer');

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter2 = require('../routers/TabRouter');

var _TabRouter3 = babelHelpers.interopRequireDefault(_TabRouter2);

var _DrawerScreen = require('../views/Drawer/DrawerScreen');

var _DrawerScreen2 = babelHelpers.interopRequireDefault(_DrawerScreen);

var _DrawerView = require('../views/Drawer/DrawerView');

var _DrawerView2 = babelHelpers.interopRequireDefault(_DrawerView);

var _DrawerNavigatorItems = require('../views/Drawer/DrawerNavigatorItems');

var _DrawerNavigatorItems2 = babelHelpers.interopRequireDefault(_DrawerNavigatorItems);

var defaultContentComponent = function defaultContentComponent(props) {
  return _react2.default.createElement(
    _reactNative.ScrollView,
    { alwaysBounceVertical: false, __source: {
        fileName: _jsxFileName,
        lineNumber: 17
      }
    },
    _react2.default.createElement(
      _reactNativeSafeAreaView2.default,
      { forceInset: { top: 'always', horizontal: 'never' }, __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      },
      _react2.default.createElement(_DrawerNavigatorItems2.default, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }))
    )
  );
};

var DefaultDrawerConfig = {
  drawerWidth: function drawerWidth() {
    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        height = _Dimensions$get.height,
        width = _Dimensions$get.width;

    var smallerAxisSize = Math.min(height, width);
    var isLandscape = width > height;
    var isTablet = smallerAxisSize >= 600;
    var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;
    var maxWidth = isTablet ? 320 : 280;

    return Math.min(smallerAxisSize - appBarHeight, maxWidth);
  },
  contentComponent: defaultContentComponent,
  drawerOpenRoute: 'DrawerOpen',
  drawerCloseRoute: 'DrawerClose',
  drawerToggleRoute: 'DrawerToggle',
  drawerPosition: 'left',
  drawerBackgroundColor: 'white',
  useNativeAnimations: true
};

var DrawerNavigator = function DrawerNavigator(routeConfigs) {
  var _TabRouter;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, DefaultDrawerConfig, config);
  var containerConfig = mergedConfig.containerConfig,
      drawerWidth = mergedConfig.drawerWidth,
      drawerLockMode = mergedConfig.drawerLockMode,
      contentComponent = mergedConfig.contentComponent,
      contentOptions = mergedConfig.contentOptions,
      drawerPosition = mergedConfig.drawerPosition,
      useNativeAnimations = mergedConfig.useNativeAnimations,
      drawerBackgroundColor = mergedConfig.drawerBackgroundColor,
      drawerOpenRoute = mergedConfig.drawerOpenRoute,
      drawerCloseRoute = mergedConfig.drawerCloseRoute,
      drawerToggleRoute = mergedConfig.drawerToggleRoute,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['containerConfig', 'drawerWidth', 'drawerLockMode', 'contentComponent', 'contentOptions', 'drawerPosition', 'useNativeAnimations', 'drawerBackgroundColor', 'drawerOpenRoute', 'drawerCloseRoute', 'drawerToggleRoute']);


  var contentRouter = (0, _TabRouter3.default)(routeConfigs, tabsConfig);
  var drawerRouter = (0, _TabRouter3.default)((_TabRouter = {}, babelHelpers.defineProperty(_TabRouter, drawerCloseRoute, {
    screen: (0, _createNavigator2.default)(contentRouter, routeConfigs, config)(function (props) {
      return _react2.default.createElement(_DrawerScreen2.default, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71
        }
      }));
    })
  }), babelHelpers.defineProperty(_TabRouter, drawerOpenRoute, {
    screen: function screen() {
      return null;
    }
  }), babelHelpers.defineProperty(_TabRouter, drawerToggleRoute, {
    screen: function screen() {
      return null;
    }
  }), _TabRouter), {
    initialRouteName: drawerCloseRoute
  });

  var navigator = (0, _createNavigator2.default)(drawerRouter, routeConfigs, config)(function (props) {
    return _react2.default.createElement(_DrawerView2.default, babelHelpers.extends({}, props, {
      drawerBackgroundColor: drawerBackgroundColor,
      drawerLockMode: drawerLockMode,
      useNativeAnimations: useNativeAnimations,
      drawerWidth: drawerWidth,
      contentComponent: contentComponent,
      contentOptions: contentOptions,
      drawerPosition: drawerPosition,
      drawerOpenRoute: drawerOpenRoute,
      drawerCloseRoute: drawerCloseRoute,
      drawerToggleRoute: drawerToggleRoute,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};

exports.default = DrawerNavigator;