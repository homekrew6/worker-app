Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/worker-app/js/components/location/unavailableDate.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _index = require('../../api/index');

var _index2 = babelHelpers.interopRequireDefault(_index);

var _reactNavigation = require('react-navigation');

var _reactNative = require('react-native');

var _nativeBase = require('native-base');

var _styles = require('./styles');

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var _FontAwesome = require('react-native-vector-icons/FontAwesome');

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _reactNativeCalendars = require('react-native-calendars');

var _locationAction = require('./elements/locationAction');

var deviceHeight = _reactNative.Dimensions.get('window').height;
var deviceWidth = _reactNative.Dimensions.get('window').width;

var MyListItem = function (_React$PureComponent) {
    babelHelpers.inherits(MyListItem, _React$PureComponent);

    function MyListItem() {
        var _ref;

        var _temp, _this, _ret;

        babelHelpers.classCallCheck(this, MyListItem);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MyListItem.__proto__ || Object.getPrototypeOf(MyListItem)).call.apply(_ref, [this].concat(args))), _this), _this._onPress = function () {
            _this.props.onPressItem(_this.props.id);
        }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(MyListItem, [{
        key: 'render',
        value: function render() {
            var textColor = this.props.selected ? "red" : "black";
            return _react2.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: this._onPress, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 23
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 24
                        }
                    },
                    _react2.default.createElement(
                        _nativeBase.Text,
                        { style: { color: textColor }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 25
                            }
                        },
                        this.props.title
                    )
                )
            );
        }
    }]);
    return MyListItem;
}(_react2.default.PureComponent);

var UnavailableDate = function (_Component) {
    babelHelpers.inherits(UnavailableDate, _Component);

    function UnavailableDate(props) {
        babelHelpers.classCallCheck(this, UnavailableDate);

        var _this2 = babelHelpers.possibleConstructorReturn(this, (UnavailableDate.__proto__ || Object.getPrototypeOf(UnavailableDate)).call(this, props));

        var today = new Date();
        var dy = parseInt(today.getMonth() + 1);
        var dm = today.getDate();
        if (dy < 10) {
            dy = '0' + dy;
        }
        if (dm < 10) {
            dm = '0' + dm;
        }

        date = today.getFullYear() + "-" + dy + "-" + dm;
        _this2.state = {
            daYSelected: [date],
            daYSelected2: [date],
            satStartDate: '',
            setStartWeek: '',
            satEndDate: '',
            setEndWeek: '',
            setStartTimeKey: '',
            setStartTime: '',
            setEndTime: '',
            setEndTimeKey: '',
            startDay: '',
            endDay: '',
            colectionData: [{ key: '1', time: '00:00 AM', isActive: false }, { key: '2', time: '01:00 AM', isActive: false }, { key: '3', time: '02:00 AM', isActive: false }, { key: '4', time: '03:00 AM', isActive: false }, { key: '5', time: '04:00 AM', isActive: false }, { key: '6', time: '05:00 AM', isActive: false }, { key: '7', time: '06:00 AM', isActive: false }, { key: '8', time: '07:00 AM', isActive: false }, { key: '9', time: '08:00 AM', isActive: false }, { key: '10', time: '09:00 AM', isActive: false }, { key: '11', time: '10:00 AM', isActive: false }, { key: '12', time: '11:00 AM', isActive: false }, { key: '13', time: '12:00 AM', isActive: false }, { key: '14', time: '01:00 PM', isActive: false }, { key: '15', time: '02:00 PM', isActive: false }, { key: '16', time: '03:00 PM', isActive: false }, { key: '17', time: '04:00 PM', isActive: false }, { key: '18', time: '05:00 PM', isActive: false }, { key: '19', time: '06:00 PM', isActive: false }, { key: '20', time: '07:00 PM', isActive: false }, { key: '21', time: '08:00 PM', isActive: false }, { key: '22', time: '09:00 PM', isActive: false }, { key: '23', time: '10:00 PM', isActive: false }, { key: '24', time: '11:00 PM', isActive: false }],

            colectionData2: [{ key: '1', time: '00:00 AM', isActive: false }, { key: '2', time: '01:00 AM', isActive: false }, { key: '3', time: '02:00 AM', isActive: false }, { key: '4', time: '03:00 AM', isActive: false }, { key: '5', time: '04:00 AM', isActive: false }, { key: '6', time: '05:00 AM', isActive: false }, { key: '7', time: '06:00 AM', isActive: false }, { key: '8', time: '07:00 AM', isActive: false }, { key: '9', time: '08:00 AM', isActive: false }, { key: '10', time: '09:00 AM', isActive: false }, { key: '11', time: '10:00 AM', isActive: false }, { key: '12', time: '11:00 AM', isActive: false }, { key: '13', time: '12:00 AM', isActive: false }, { key: '14', time: '01:00 PM', isActive: false }, { key: '15', time: '02:00 PM', isActive: false }, { key: '16', time: '03:00 PM', isActive: false }, { key: '17', time: '04:00 PM', isActive: false }, { key: '18', time: '05:00 PM', isActive: false }, { key: '19', time: '06:00 PM', isActive: false }, { key: '20', time: '07:00 PM', isActive: false }, { key: '21', time: '08:00 PM', isActive: false }, { key: '22', time: '09:00 PM', isActive: false }, { key: '23', time: '10:00 PM', isActive: false }, { key: '24', time: '11:00 PM', isActive: false }],
            weekday: ['Sun', 'Mon', 'Tues', 'Wed', 'Thu', 'Fri', 'Sat'],
            months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']
        };
        return _this2;
    }

    babelHelpers.createClass(UnavailableDate, [{
        key: 'onDaySelect',
        value: function onDaySelect(day) {
            console.log;
            var d = new Date(day.dateString);
            var weekday = new Array(7);
            weekday[0] = "Sun";
            weekday[1] = "Mon";
            weekday[2] = "Tue";
            weekday[3] = "Wed";
            weekday[4] = "Thu";
            weekday[5] = "Fri";
            weekday[6] = "Sat";

            var n = weekday[d.getDay()];
            this.setState({
                daYSelected: day.dateString,
                satStartDate: day.day + '-' + this.state.months[day.month - 1] + '-' + day.year,
                setStartWeek: n
            });
        }
    }, {
        key: 'onDaySelect2',
        value: function onDaySelect2(day) {
            var d = new Date(day.dateString);
            var weekday = new Array(7);
            weekday[0] = "Sun";
            weekday[1] = "Mon";
            weekday[2] = "Tue";
            weekday[3] = "Wed";
            weekday[4] = "Thu";
            weekday[5] = "Fri";
            weekday[6] = "Sat";

            var n = weekday[d.getDay()];
            console.log(n);
            this.setState({
                daYSelected2: day.dateString,
                satEndDate: day.day + '-' + this.state.months[day.month - 1] + '-' + day.year,
                setEndWeek: n
            });
        }
    }, {
        key: 'pressOnCircle',
        value: function pressOnCircle(index) {
            var newColectionData = this.state.colectionData;

            for (var i = 0; i < newColectionData.length; i++) {
                newColectionData[i].isActive = false;
                if (newColectionData[i].key == index) {
                    newColectionData[i].isActive = true;
                    this.setState({
                        setStartTimeKey: newColectionData[i].key,
                        setStartTime: newColectionData[i].time
                    });
                }
            }
            this.setState({
                ColectionData: newColectionData
            });
        }
    }, {
        key: 'pressOnCircle2',
        value: function pressOnCircle2(index) {
            var newColectionData = this.state.colectionData2;

            for (var i = 0; i < newColectionData.length; i++) {
                newColectionData[i].isActive = false;
                if (newColectionData[i].key == index) {
                    newColectionData[i].isActive = true;
                    this.setState({
                        setEndTimeKey: newColectionData[i].key,
                        setEndTime: newColectionData[i].time
                    });
                }
            }
            this.setState({
                ColectionData2: newColectionData
            });
        }
    }, {
        key: 'doneDateAndTime',
        value: function doneDateAndTime() {
            console.log(this.props.auth);
            if (this.state.satStartDate == '') {
                _reactNative.Alert.alert('please enter Start Date');
            } else if (this.state.setStartTime == '') {
                _reactNative.Alert.alert('please enter Start Time');
            } else if (this.state.satEndDate == '') {
                _reactNative.Alert.alert('please enter End Date');
            } else if (this.state.setEndTime == '') {
                _reactNative.Alert.alert('please enter End Time');
            } else {

                    var d1 = new Date(this.state.satStartDate);
                    var d2 = new Date(this.state.satEndDate);
                    if (d1 <= d2) {
                        if (!(d1 < d2)) {
                            if (this.state.setStartTimeKey > this.state.setEndTimeKey) {
                                _reactNative.Alert.alert('End time will be getter than start time');
                            } else {
                                _index2.default.post('WorkerUnavailabilities/', {
                                    "start_time": this.state.setStartTime,
                                    "end_time": this.state.setEndTime,
                                    "status": "NA",
                                    "start_date": this.state.daYSelected,
                                    "end_date": this.state.daYSelected2,
                                    "workerId": this.props.auth.data.id
                                }).then(function (res) {
                                    console.log(res);
                                }).catch(function (err) {
                                    console.log(err);
                                });
                            }
                        } else {
                            _index2.default.post('WorkerUnavailabilities/', {
                                "start_time": this.state.setStartTime,
                                "end_time": this.state.setEndTime,
                                "status": "NA",
                                "start_date": this.state.daYSelected,
                                "end_date": this.state.daYSelected2,
                                "workerId": this.props.auth.data.id
                            }).then(function (res) {
                                console.log(res);
                            }).catch(function (err) {
                                console.log(err);
                            });
                        }
                    } else {
                        _reactNative.Alert.alert("Start date is less than or equal to end Date ");
                    }
                }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _nativeBase.Container,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 259
                    }
                },
                _react2.default.createElement(_reactNative.StatusBar, {
                    backgroundColor: '#81cdc7', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 260
                    }
                }),
                _react2.default.createElement(
                    _nativeBase.Header,
                    { style: _styles2.default.appHdr2, androidStatusBarColor: '#cbf0ed', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 263
                        }
                    },
                    _react2.default.createElement(
                        _nativeBase.Button,
                        { transparent: true, onPress: function onPress() {
                                return _this3.props.navigation.goBack();
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 264
                            }
                        },
                        _react2.default.createElement(
                            _nativeBase.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 265
                                }
                            },
                            'Cancle'
                        )
                    ),
                    _react2.default.createElement(
                        _nativeBase.Body,
                        { style: _styles2.default.tac, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 267
                            }
                        },
                        _react2.default.createElement(
                            _nativeBase.Text,
                            { style: _styles2.default.hdClr, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 268
                                }
                            },
                            'My Timings'
                        )
                    ),
                    _react2.default.createElement(
                        _nativeBase.Button,
                        { transparent: true, onPress: function onPress() {
                                return _this3.doneDateAndTime();
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 270
                            }
                        },
                        _react2.default.createElement(
                            _nativeBase.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 271
                                }
                            },
                            'Done'
                        )
                    )
                ),
                _react2.default.createElement(
                    _nativeBase.Content,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 275
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { paddingLeft: 15, paddingRight: 15 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 277
                            }
                        },
                        _react2.default.createElement(
                            _nativeBase.Card,
                            { style: { backgroundColor: 'transparent', marginBottom: 20 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 278
                                }
                            },
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                { style: { marginBottom: 2, alignItems: 'center', justifyContent: 'center', flexDirection: 'row' }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 279
                                    }
                                },
                                _react2.default.createElement(_FontAwesome2.default, { name: 'calendar', style: { color: '#81cdc7', fontSize: 20, marginRight: 5 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 280
                                    }
                                }),
                                _react2.default.createElement(
                                    _nativeBase.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 281
                                        }
                                    },
                                    'Start Day'
                                )
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 283
                                    }
                                },
                                _react2.default.createElement(_reactNativeCalendars.Calendar, {
                                    onDayPress: function onDayPress(day) {
                                        return _this3.onDaySelect(day);
                                    },
                                    monthFormat: 'MMM yyyy',
                                    hideArrows: false,
                                    hideExtraDays: true,
                                    disableMonthChange: false,
                                    markedDates: babelHelpers.defineProperty({}, this.state.daYSelected, { selected: true, selectedColor: '#81cdc7' }),
                                    theme: {
                                        backgroundColor: '#ffffff',
                                        calendarBackground: '#ffffff',
                                        textSectionTitleColor: '#2d4150',
                                        selectedDayBackgroundColor: '#2d4150',
                                        selectedDayTextColor: '#ffffff',
                                        todayTextColor: '#81cdc7',
                                        dayTextColor: '#2d4150',
                                        weekTextColor: '#000',
                                        textDisabledColor: '#ccc',
                                        arrowColor: '#81cdc7',
                                        textDayFontSize: 14,
                                        textMonthFontSize: 16,
                                        textDayHeaderFontSize: 16

                                    },
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 284
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                { style: { marginTop: 2, marginBottom: 2, alignItems: 'center', justifyContent: 'center', flexDirection: 'row' }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 312
                                    }
                                },
                                _react2.default.createElement(_FontAwesome2.default, { name: 'clock-o', style: { color: '#81cdc7', fontSize: 20, marginRight: 5 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 313
                                    }
                                }),
                                _react2.default.createElement(
                                    _nativeBase.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 314
                                        }
                                    },
                                    'Start Time'
                                )
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 316
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: { flex: 1, flexDirection: 'row' }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 317
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.FlatList, {
                                        data: this.state.colectionData,
                                        renderItem: function renderItem(_ref3) {
                                            var item = _ref3.item;
                                            return _react2.default.createElement(
                                                _reactNative.TouchableOpacity,
                                                { onPress: function onPress() {
                                                        return _this3.pressOnCircle(item.key);
                                                    }, id: item.key, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 323
                                                    }
                                                },
                                                _react2.default.createElement(
                                                    _nativeBase.Text,
                                                    { style: { paddingTop: 5, paddingBottom: 5, paddingRight: 8, paddingLeft: 8, borderRadius: 4, borderWidth: 1, borderColor: '#ccc', backgroundColor: item.isActive ? '#81cdc7' : '#ffffff', color: item.isActive ? '#ffffff' : '#81cdc7', marginRight: 5 }, __source: {
                                                            fileName: _jsxFileName,
                                                            lineNumber: 324
                                                        }
                                                    },
                                                    item.time
                                                )
                                            );
                                        },
                                        style: { paddingTop: 10, paddingBottom: 10 },
                                        horizontal: true,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 318
                                        }
                                    })
                                )
                            )
                        ),
                        _react2.default.createElement(
                            _nativeBase.Card,
                            { style: { backgroundColor: 'transparent' }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 336
                                }
                            },
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                { style: { marginBottom: 2, alignItems: 'center', justifyContent: 'center', flexDirection: 'row' }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 337
                                    }
                                },
                                _react2.default.createElement(_FontAwesome2.default, { name: 'calendar', style: { color: '#81cdc7', fontSize: 20, marginRight: 5 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 338
                                    }
                                }),
                                _react2.default.createElement(
                                    _nativeBase.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 339
                                        }
                                    },
                                    'End Day'
                                )
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 341
                                    }
                                },
                                _react2.default.createElement(_reactNativeCalendars.Calendar, {
                                    onDayPress: function onDayPress(day) {
                                        return _this3.onDaySelect2(day);
                                    },
                                    monthFormat: 'MMM yyyy',
                                    hideArrows: false,
                                    hideExtraDays: true,
                                    disableMonthChange: false,
                                    markedDates: babelHelpers.defineProperty({}, this.state.daYSelected2, { selected: true, selectedColor: '#81cdc7' }),
                                    theme: {
                                        backgroundColor: '#ffffff',
                                        calendarBackground: '#ffffff',
                                        textSectionTitleColor: '#2d4150',
                                        selectedDayBackgroundColor: '#2d4150',
                                        selectedDayTextColor: '#ffffff',
                                        todayTextColor: '#81cdc7',
                                        dayTextColor: '#2d4150',
                                        weekTextColor: '#000',
                                        textDisabledColor: '#ccc',
                                        arrowColor: '#81cdc7',
                                        textDayFontSize: 14,
                                        textMonthFontSize: 16,
                                        textDayHeaderFontSize: 16

                                    },
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 342
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                { style: { marginBottom: 2, marginTop: 2, alignItems: 'center', justifyContent: 'center', flexDirection: 'row' }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 369
                                    }
                                },
                                _react2.default.createElement(_FontAwesome2.default, { name: 'clock-o', style: { color: '#81cdc7', fontSize: 20, marginRight: 5 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 370
                                    }
                                }),
                                _react2.default.createElement(
                                    _nativeBase.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 371
                                        }
                                    },
                                    'End Time'
                                )
                            ),
                            _react2.default.createElement(
                                _nativeBase.CardItem,
                                {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 373
                                    }
                                },
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: { flex: 1, flexDirection: 'row' }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 374
                                        }
                                    },
                                    _react2.default.createElement(_reactNative.FlatList, {
                                        data: this.state.colectionData2,
                                        renderItem: function renderItem(_ref5) {
                                            var item = _ref5.item;
                                            return _react2.default.createElement(
                                                _reactNative.TouchableOpacity,
                                                { onPress: function onPress() {
                                                        return _this3.pressOnCircle2(item.key);
                                                    }, id: item.key, __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 380
                                                    }
                                                },
                                                _react2.default.createElement(
                                                    _nativeBase.Text,
                                                    { style: { paddingTop: 5, paddingBottom: 5, paddingRight: 8, paddingLeft: 8, borderRadius: 4, borderWidth: 1, borderColor: '#ccc', backgroundColor: item.isActive ? '#81cdc7' : '#ffffff', color: item.isActive ? '#ffffff' : '#81cdc7', marginRight: 5 }, __source: {
                                                            fileName: _jsxFileName,
                                                            lineNumber: 381
                                                        }
                                                    },
                                                    item.time
                                                )
                                            );
                                        },
                                        style: { paddingTop: 10, paddingBottom: 10 },
                                        horizontal: true,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 375
                                        }
                                    })
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);
    return UnavailableDate;
}(_react.Component);

UnavailableDate.propTypes = {
    location: _propTypes2.default.object.isRequired,
    auth: _propTypes2.default.object.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        location: state.location,
        auth: state.auth
    };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UnavailableDate);