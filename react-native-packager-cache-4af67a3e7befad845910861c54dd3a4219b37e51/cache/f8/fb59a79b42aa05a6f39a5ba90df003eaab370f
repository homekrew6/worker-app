Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/worker-app/node_modules/react-navigation/src/views/Header/ModularHeaderBackButton.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _TouchableItem = require('../TouchableItem');

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var ModularHeaderBackButton = function (_React$PureComponent) {
  babelHelpers.inherits(ModularHeaderBackButton, _React$PureComponent);

  function ModularHeaderBackButton() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ModularHeaderBackButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ModularHeaderBackButton.__proto__ || Object.getPrototypeOf(ModularHeaderBackButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._onTextLayout = function (e) {
      if (_this.state.initialTextWidth) {
        return;
      }
      _this.setState({
        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ModularHeaderBackButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          buttonImage = _props.buttonImage,
          onPress = _props.onPress,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle,
          tintColor = _props.tintColor,
          truncatedTitle = _props.truncatedTitle;


      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;

      var backButtonTitle = renderTruncated ? truncatedTitle : title;

      if (backButtonTitle && backButtonTitle.length > 8) {
        backButtonTitle = truncatedTitle;
      }

      var _props2 = this.props,
          ButtonContainerComponent = _props2.ButtonContainerComponent,
          LabelContainerComponent = _props2.LabelContainerComponent;


      return _react2.default.createElement(
        _TouchableItem2.default,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: backButtonTitle,
          accessibilityTraits: 'button',
          testID: 'header-back',
          delayPressIn: 0,
          onPress: onPress,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          _react2.default.createElement(
            ButtonContainerComponent,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 63
              }
            },
            _react2.default.createElement(_reactNative.Image, {
              style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && { tintColor: tintColor }],
              source: buttonImage,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            })
          ),
          typeof backButtonTitle === 'string' && _react2.default.createElement(
            LabelContainerComponent,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 74
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                onLayout: this._onTextLayout,
                style: [styles.title, !!tintColor && { color: tintColor }, titleStyle],
                numberOfLines: 1,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 75
                }
              },
              backButtonTitle
            )
          )
        )
      );
    }
  }]);
  return ModularHeaderBackButton;
}(_react2.default.PureComponent);

ModularHeaderBackButton.defaultProps = {
  tintColor: '#037aff',
  truncatedTitle: 'Back',

  buttonImage: require('../assets/back-icon.png')
};


var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    flexDirection: 'row',
    backgroundColor: 'transparent'
  },
  title: {
    fontSize: 17,
    paddingRight: 10
  },
  icon: {
    height: 21,
    width: 12,
    marginLeft: 9,
    marginRight: 22,
    marginVertical: 12,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  },
  iconWithTitle: {
    marginRight: 3
  }
});

exports.default = ModularHeaderBackButton;